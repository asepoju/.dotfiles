## GNU Coreutils
# alias ls='ls --color=tty'
## BSD
# alias ls='ls -G'

## Aliases
#if (( $+commands[tmux] )); then alias irc='tmux attach -t irc'; fi
#if (( $+commands[ydiff] )); then alias vd='ydiff -sw0'; fi

## notify
#if (( $+commands[osascript] )); then
#  notify () {
#    # 'sound name' 파라미터가 작동 안해서 afplay로 바꿈
#    # Reference: https://developer.apple.com/library/archive/documentation/AppleScript/Conceptual/AppleScriptLangGuide/reference/ASLR_cmds.html#//apple_ref/doc/uid/TP40000983-CH216-SW224
#    echo 'display notification "일어나세요" with title "작업 끝!"' | osascript
#    afplay /System/Library/Sounds/Glass.aiff &
#  }
#fi

## macOS OpenVPN
#vpn() {
#  local CLI='/Library/Frameworks/OpenVPN.framework/Versions/Current/bin/ovpncli'
#  case "$1" in
#    ("h" | "home") "$CLI" -t home.example.com -U connect;;
#    ("o" | "office") "$CLI" -t office.example.com -U connect;;
#    ("q" | "quit") "$CLI" -U disconnect;;
#    (*) cat <<'EOF' && return 1;;
#vpn
#CLI로 OpenVPN 연결을 제어할 수 있도록 해줍니다
#
#USAGE:
#    vpn [COMMAND]
#
#COMMANDS:
#    h, home     home.example.com 으로 연결합니다
#    o, office   office.example.com 으로 연결합니다
#    q, quit     모든 VPN 연결을 종료시킵니다
#EOF
#  esac
#}

## Update PATH (examples)
#export PATH="\
#$HOME/.cargo/bin\
#:$HOME/.awscliv2/binaries\
#:$HOME/.local/bin\
#:$HOME/.yarn/bin\
#:/home/linuxbrew/.linuxbrew/bin\
#:/home/linuxbrew/.linuxbrew/sbin\
#:/usr/local/sbin\
#:/usr/local/opt/ruby/bin\
#:/usr/local/lib/ruby/gems/2.6.0/bin\
#${PATH+:$PATH}"

## Homebrew for Linux
#eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)

## kubectl
#if (( $+commands[kubectl] )); then
#  source <(kubectl completion zsh)
#  alias k=kubectl
#fi

## Terraform
#if (( $+commands[terraform] )); then
#  alias tf='terraform'
#  export TF_PLUGIN_CACHE_DIR="$HOME/.terraform.d/plugin-cache"
#fi

## Vault autocompletion
#if (( $+commands[vault] )); then
#  autoload -U +X bashcompinit && bashcompinit
#  autoload -Uz compinit && compinit
#  complete -o nospace -C /usr/local/bin/vault vault
#fi

## Golang
#if (( $+commands[go] )) && [[ -d ~/.go ]]; then
#  export GOPATH="$HOME/.go"
#  export PATH="$PATH:$GOPATH/bin"
#fi

## fzf
#if [[ -f ~/.fzf.zsh ]]; then source ~/.fzf.zsh; fi

## fzf (debian)
#if [[ -f /usr/share/doc/fzf/examples/key-bindings.zsh ]]; then
#  source /usr/share/doc/fzf/examples/key-bindings.zsh
#fi

## fd (debian)
#if (( $+commands[fdfind] )); then
#  alias fd=fdfind
#fi

## lsd
#if (( $+commands[lsd] )); then
#  alias l='lsd -Al --date=relative --group-dirs=first --blocks=permission,user,size,date,name'
#  alias ll='lsd -l --date=relative --group-dirs=first --blocks=permission,user,size,date,name'
#  alias lt='lsd --tree --depth=2 --date=relative --group-dirs=first'
#fi

## exa
#if (( $+commands[exa] )); then
#  alias l='exa -alh --group-directories-first'
#  alias ll='exa -lh --group-directories-first'
#  alias lt='exa -TL2 --group-directories-first'
#fi

## tag
#if (( $+commands[tag] )) && (( $+commands[rg] )); then
#  export TAG_SEARCH_PROG=rg
#  tag() {
#    command tag "$@"; source "${TAG_ALIAS_FILE:-/tmp/tag_aliases}" 2>/dev/null
#  }
#fi

## WSL2 + X11
#export DISPLAY=$(ip route | awk '/default via / {print $3}'):0

## Clear screen
#clear_screen() { tput clear }
#zle -N clear_screen
#bindkey '^s' clear_screen

## Mosh
#compdef mosh=ssh

## AWSCLIv2
#export AWS_DEFAULT_PROFILE=blabla
#export AWS_DEFAULT_REGION=blabla
#complete -C aws_completer aws

## Cloudflare
#export CLOUDFLARE_EMAIL=simnalamburt@gmail.com
#export CLOUDFLARE_API_KEY=xxxxxxxx

## bat
#export BAT_PAGER='less -+XF -RSQc'
